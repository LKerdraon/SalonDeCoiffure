{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AvisService {\n  // HttpClient: un module qui nous permet d'utiliser les verbes http : GET.POST,PUT et DELETE\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.BASE_URL = \"http://localhost:9090/avis\";\n  }\n  // findAll --> verbe http GET --> url : BASE_URL --> Récupération des données avec la méthode Observable\n  // Afficher la liste des avis\n  findAll() {\n    return this.httpClient.get(this.BASE_URL);\n  }\n  // save --> verbe http POST --> url : BASE_URL + Body (avis)\n  save(avis) {\n    return this.httpClient.post(this.BASE_URL, avis);\n  }\n  // delete --> verbe http DELETE --> url : BASE_URL/id\n  // http://localhost:9090/avis/5\n  delete(id) {\n    return this.httpClient.delete(this.BASE_URL + \"/\" + id);\n  }\n}\nAvisService.ɵfac = function AvisService_Factory(t) {\n  return new (t || AvisService)(i0.ɵɵinject(i1.HttpClient));\n};\nAvisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AvisService,\n  factory: AvisService.ɵfac,\n  providedIn: 'root'\n});\nexport { AvisService };","map":{"version":3,"names":["AvisService","constructor","httpClient","BASE_URL","findAll","get","save","avis","post","delete","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/in-so-013/Documents/Angular/wk_angular_salon_coiffure/firstAngularApplication/firstAngularApp/src/app/services/avis.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Utilisateur } from '../models/utilisateur';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvisService {\n  private BASE_URL = \"http://localhost:9090/avis\";\n  // HttpClient: un module qui nous permet d'utiliser les verbes http : GET.POST,PUT et DELETE\n  constructor(private httpClient:HttpClient) { }\n  // findAll --> verbe http GET --> url : BASE_URL --> Récupération des données avec la méthode Observable\n  // Afficher la liste des avis\n  public findAll():Observable<any>{\n    return this.httpClient.get(this.BASE_URL); \n  }\n  // save --> verbe http POST --> url : BASE_URL + Body (avis)\n  public save(avis:Utilisateur):Observable<any>{\n    return this.httpClient.post(this.BASE_URL,avis);\n  }\n  // delete --> verbe http DELETE --> url : BASE_URL/id\n  // http://localhost:9090/avis/5\n  public delete(id:number):Observable<any>{\n    return this.httpClient.delete(this.BASE_URL+\"/\"+id);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,WAAW;EAEtB;EACAC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,QAAQ,GAAG,4BAA4B;EAEF;EAC7C;EACA;EACOC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC3C;EACA;EACOG,IAAIA,CAACC,IAAgB;IAC1B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,IAAI,CAACL,QAAQ,EAACI,IAAI,CAAC;EACjD;EACA;EACA;EACOE,MAAMA,CAACC,EAAS;IACrB,OAAO,IAAI,CAACR,UAAU,CAACO,MAAM,CAAC,IAAI,CAACN,QAAQ,GAAC,GAAG,GAACO,EAAE,CAAC;EACrD;;AAjBWV,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}